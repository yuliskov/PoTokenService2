{
  "version": 3,
  "sources": ["../dist/index.js", "../dist/core/index.js", "../dist/core/challenge.js", "../dist/utils/helpers.js", "../dist/utils/constants.js", "../dist/core/potoken.js"],
  "sourcesContent": ["import * as BG from './core/index.js';\nexport { BG };\nexport default BG;\nexport * from './utils/index.js';\n", "export * as Challenge from './challenge.js';\nexport * as PoToken from './potoken.js';\n", "var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { BGError, base64ToU8, BASE_URL, GOOG_API_KEY, USER_AGENT } from '../utils/index.js';\n/**\n * Creates a challenge.\n * @param bgConfig - The config.\n * @param interpreterHash - The ID of the challenge script. If provided, the server will assume that\n * the client already has the script and will not return it.\n * @returns The challenge data.\n */\nexport function create(bgConfig, interpreterHash) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const requestKey = bgConfig.requestKey;\n        if (!requestKey)\n            throw new BGError(0, '[Challenge]: Request key not provided');\n        if (!bgConfig.fetch)\n            throw new BGError(1, '[Challenge]: Fetch function not provided');\n        const payload = [requestKey];\n        if (interpreterHash)\n            payload.push(interpreterHash);\n        const response = yield bgConfig.fetch(new URL('/$rpc/google.internal.waa.v1.Waa/Create', BASE_URL), {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json+protobuf',\n                'User-Agent': USER_AGENT,\n                'X-Goog-Api-Key': GOOG_API_KEY,\n                'X-User-Agent': 'grpc-web-javascript/0.1'\n            },\n            body: JSON.stringify(payload)\n        });\n        if (!response.ok)\n            throw new BGError(2, `[Challenge]: Failed to fetch challenge: ${response.status}`);\n        const rawData = yield response.json();\n        return parseChallengeData(rawData);\n    });\n}\n/**\n * Parses the challenge data from the provided response data.\n */\nexport function parseChallengeData(rawData) {\n    let challengeData = [];\n    if (rawData.length > 1 && typeof rawData[1] === 'string') {\n        const descrambled = descramble(rawData[1]);\n        challengeData = JSON.parse(descrambled || '[]');\n    }\n    else if (rawData.length && typeof rawData[0] === 'object') {\n        challengeData = rawData[0];\n    }\n    const [messageId, wrappedScript, , interpreterHash, program, globalName, , clientExperimentsStateBlob] = challengeData;\n    const privateDoNotAccessOrElseSafeScriptWrappedValue = Array.isArray(wrappedScript) ? wrappedScript.find((value) => value && typeof value === 'string') : null;\n    return {\n        messageId,\n        interpreterJavascript: {\n            privateDoNotAccessOrElseSafeScriptWrappedValue\n        },\n        interpreterHash,\n        program,\n        globalName,\n        clientExperimentsStateBlob\n    };\n}\n/**\n * Descrambles the given challenge data.\n */\nexport function descramble(scrambledChallenge) {\n    const buffer = base64ToU8(scrambledChallenge);\n    if (buffer.length)\n        return new TextDecoder().decode(buffer.map((b) => b + 97));\n}\n", "const base64urlCharRegex = /[-_.]/g;\nconst base64urlToBase64Map = {\n    '-': '+',\n    _: '/',\n    '.': '='\n};\nexport function base64ToU8(base64) {\n    let base64Mod;\n    if (base64urlCharRegex.test(base64)) {\n        base64Mod = base64.replace(base64urlCharRegex, function (match) {\n            return base64urlToBase64Map[match];\n        });\n    }\n    else {\n        base64Mod = base64;\n    }\n    base64Mod = atob(base64Mod);\n    const result = new Uint8Array([...base64Mod].map((char) => char.charCodeAt(0)));\n    return result;\n}\nexport function u8ToBase64(u8, base64url = false) {\n    const result = btoa(String.fromCharCode(...u8));\n    if (base64url) {\n        return result\n            .replace(/\\+/g, '-')\n            .replace(/\\//g, '_');\n    }\n    return result;\n}\nexport class BGError {\n    constructor(code, message) {\n        this.code = code;\n        this.message = message;\n    }\n}\n", "export const BASE_URL = 'https://jnn-pa.googleapis.com';\nexport const GOOG_API_KEY = 'AIzaSyDyT5W0Jh49F30Pqqtyfdf7pDLFKLJoAnw';\nexport const USER_AGENT = 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36(KHTML, like Gecko)';\n", "var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { BASE_URL, GOOG_API_KEY, USER_AGENT } from '../utils/index.js';\nimport { u8ToBase64, base64ToU8, BGError } from '../utils/index.js';\n/**\n * Generates a Proof of Origin Token.\n * @param args - The arguments for generating the token.\n */\nexport function generate(args) {\n    return __awaiter(this, void 0, void 0, function* () {\n        var _a, _b;\n        const { program, bgConfig, globalName } = args;\n        const { identifier } = bgConfig;\n        const bgResult = yield invokeBotguard(program, globalName, bgConfig);\n        if (bgResult.postProcessFunctions.length) {\n            const processIntegrityToken = bgResult.postProcessFunctions[0];\n            if (!processIntegrityToken)\n                throw new BGError(4, 'PMD:Undefined');\n            const acquirePo = yield processIntegrityToken(base64ToU8((_b = (_a = bgResult.integrityTokenData.integrityToken) !== null && _a !== void 0 ? _a : bgResult.integrityTokenData.websafeFallbackToken) !== null && _b !== void 0 ? _b : ''));\n            if (typeof acquirePo !== 'function')\n                throw new BGError(16, 'APF:Failed');\n            const result = yield acquirePo(new TextEncoder().encode(identifier));\n            if (!result)\n                throw new BGError(17, 'YNJ:Undefined');\n            if (!(result instanceof Uint8Array))\n                throw new BGError(18, 'ODM:Invalid');\n            return {\n                poToken: u8ToBase64(result, true),\n                integrityTokenData: bgResult.integrityTokenData\n            };\n        }\n        throw new BGError(0, '[BG]: Failed to process integrity token data');\n    });\n}\n/**\n * Invokes the Botguard VM.\n * @param program - The bytecode to run.\n * @param globalName - The name of the VM in the global scope.\n * @param bgConfig - The Botguard configuration.\n */\nfunction invokeBotguard(program, globalName, bgConfig) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const vm = bgConfig.globalObj[globalName];\n        const requestKey = bgConfig.requestKey;\n        if (!vm)\n            throw new BGError(1, '[BG]: VM not found in the global object');\n        if (!requestKey)\n            throw new BGError(1, '[BG]: Request key not provided');\n        if (!bgConfig.fetch)\n            throw new BGError(1, '[BG]: Fetch function not provided');\n        const attFunctions = {};\n        const setAttFunctions = (fn1, fn2, fn3, fn4) => {\n            Object.assign(attFunctions, { fn1, fn2, fn3, fn4 });\n        };\n        if (!vm.a)\n            throw new BGError(2, '[BG]: Init failed');\n        try {\n            yield vm.a(program, setAttFunctions, true, undefined, () => { });\n        }\n        catch (err) {\n            throw new BGError(3, `[BG]: Failed to load program: ${err.message}`);\n        }\n        if (!attFunctions.fn1)\n            throw new BGError(4, '[BG]: Att function unavailable. Cannot proceed.');\n        let botguardResponse;\n        const postProcessFunctions = [];\n        yield attFunctions.fn1((response) => (botguardResponse = response), [, , postProcessFunctions]);\n        if (!botguardResponse)\n            throw new BGError(5, '[BG]: No response');\n        if (!postProcessFunctions.length)\n            throw new BGError(6, '[BG]: Got response but no post-process functions');\n        const payload = [requestKey, botguardResponse];\n        const integrityTokenResponse = yield bgConfig.fetch(new URL('/$rpc/google.internal.waa.v1.Waa/GenerateIT', BASE_URL), {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json+protobuf',\n                'x-goog-api-key': GOOG_API_KEY,\n                'x-user-agent': 'grpc-web-javascript/0.1',\n                'User-Agent': USER_AGENT,\n                'Accept': '*/*'\n            },\n            body: JSON.stringify(payload)\n        });\n        if (!integrityTokenResponse.ok)\n            throw new BGError(7, '[GenerateIT]: Failed to generate integrity token');\n        const integrityTokenData = yield integrityTokenResponse.json();\n        if (!integrityTokenData.length)\n            throw new BGError(8, '[GenerateIT]: No integrity token data received');\n        const [integrityToken, estimatedTtlSecs, mintRefreshThreshold, websafeFallbackToken] = integrityTokenData;\n        if (integrityToken !== undefined && typeof integrityToken !== 'string')\n            throw new BGError(9, '[GenerateIT]: Invalid integrity token');\n        if (estimatedTtlSecs !== undefined && typeof estimatedTtlSecs !== 'number')\n            throw new BGError(10, '[GenerateIT]: Invalid TTL');\n        if (mintRefreshThreshold !== undefined && typeof mintRefreshThreshold !== 'number')\n            throw new BGError(11, '[GenerateIT]: Invalid mint refresh threshold');\n        if (websafeFallbackToken !== undefined && typeof websafeFallbackToken !== 'string')\n            throw new BGError(12, '[GenerateIT]: Invalid websafe fallback token');\n        return {\n            integrityTokenData: {\n                integrityToken,\n                estimatedTtlSecs,\n                mintRefreshThreshold,\n                websafeFallbackToken\n            },\n            postProcessFunctions\n        };\n    });\n}\n/**\n * Creates a placeholder PoToken. This can be used while `sps` (StreamProtectionStatus) is 2, but will not work once it changes to 3.\n * @param identifier - Visitor ID or Data Sync ID.\n */\nexport function generatePlaceholder(identifier, clientState) {\n    const encodedIdentifier = new TextEncoder().encode(identifier);\n    if (encodedIdentifier.length > 118)\n        throw new BGError(19, 'DFO:Invalid');\n    const timestamp = Math.floor(Date.now() / 1000);\n    const randomKeys = [Math.floor(Math.random() * 256), Math.floor(Math.random() * 256)];\n    // NOTE: The \"0\" value before the client state is supposed to be someVal & 0xFF.\n    // It is always 0 though, so I didn't bother investigating further.\n    const header = randomKeys.concat([\n        0, (clientState !== null && clientState !== void 0 ? clientState : 1)\n    ], [\n        (timestamp >> 24) & 0xFF,\n        (timestamp >> 16) & 0xFF,\n        (timestamp >> 8) & 0xFF,\n        timestamp & 0xFF\n    ]);\n    const packet = new Uint8Array(2 + header.length + encodedIdentifier.length);\n    packet[0] = 34;\n    packet[1] = header.length + encodedIdentifier.length;\n    packet.set(header, 2);\n    packet.set(encodedIdentifier, 2 + header.length);\n    const payload = packet.subarray(2);\n    const keyLength = randomKeys.length;\n    for (let i = keyLength; i < payload.length; i++) {\n        payload[i] ^= payload[i % keyLength];\n    }\n    return u8ToBase64(packet, true);\n}\n/**\n * Decodes a placeholder potoken string into its components.\n * @param placeholder - The placeholder potoken to decode.\n * @throws Error if the packet length is invalid.\n */\nexport function decodePlaceholder(placeholder) {\n    const packet = base64ToU8(placeholder);\n    const payloadLength = packet[1];\n    const totalPacketLength = 2 + payloadLength;\n    if (packet.length !== totalPacketLength)\n        throw new Error('Invalid packet length.');\n    const payload = packet.subarray(2);\n    // Decrypt the payload by reversing the XOR operation\n    const keyLength = 2;\n    for (let i = keyLength; i < payload.length; ++i) {\n        payload[i] ^= payload[i % keyLength];\n    }\n    const keys = [payload[0], payload[1]];\n    const unknownVal = payload[2]; // The masked property I mentioned in the function above\n    const clientState = payload[3];\n    const timestamp = (payload[4] << 24) |\n        (payload[5] << 16) |\n        (payload[6] << 8) |\n        payload[7];\n    const date = new Date(timestamp * 1000);\n    const identifier = new TextDecoder().decode(payload.subarray(8));\n    return {\n        identifier,\n        timestamp,\n        unknownVal,\n        clientState,\n        keys,\n        date\n    };\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAA;AAAA;AAAA;AAAA;AAAA;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAA,IAAM,qBAAqB;AAC3B,IAAM,uBAAuB;AAAA,EACzB,KAAK;AAAA,EACL,GAAG;AAAA,EACH,KAAK;AACT;AACO,SAAS,WAAW,QAAQ;AAC/B,MAAI;AACJ,MAAI,mBAAmB,KAAK,MAAM,GAAG;AACjC,gBAAY,OAAO,QAAQ,oBAAoB,SAAU,OAAO;AAC5D,aAAO,qBAAqB,KAAK;AAAA,IACrC,CAAC;AAAA,EACL,OACK;AACD,gBAAY;AAAA,EAChB;AACA,cAAY,KAAK,SAAS;AAC1B,QAAM,SAAS,IAAI,WAAW,CAAC,GAAG,SAAS,EAAE,IAAI,CAAC,SAAS,KAAK,WAAW,CAAC,CAAC,CAAC;AAC9E,SAAO;AACX;AACO,SAAS,WAAW,IAAI,YAAY,OAAO;AAC9C,QAAM,SAAS,KAAK,OAAO,aAAa,GAAG,EAAE,CAAC;AAC9C,MAAI,WAAW;AACX,WAAO,OACF,QAAQ,OAAO,GAAG,EAClB,QAAQ,OAAO,GAAG;AAAA,EAC3B;AACA,SAAO;AACX;AACO,IAAM,UAAN,MAAc;AAAA,EACjB,YAAY,MAAM,SAAS;AACvB,SAAK,OAAO;AACZ,SAAK,UAAU;AAAA,EACnB;AACJ;;;AClCO,IAAM,WAAW;AACjB,IAAM,eAAe;AACrB,IAAM,aAAa;;;AFF1B,IAAI,YAAwC,SAAU,SAAS,YAAY,GAAG,WAAW;AACrF,WAAS,MAAM,OAAO;AAAE,WAAO,iBAAiB,IAAI,QAAQ,IAAI,EAAE,SAAU,SAAS;AAAE,cAAQ,KAAK;AAAA,IAAG,CAAC;AAAA,EAAG;AAC3G,SAAO,KAAK,MAAM,IAAI,UAAU,SAAU,SAAS,QAAQ;AACvD,aAAS,UAAU,OAAO;AAAE,UAAI;AAAE,aAAK,UAAU,KAAK,KAAK,CAAC;AAAA,MAAG,SAAS,GAAG;AAAE,eAAO,CAAC;AAAA,MAAG;AAAA,IAAE;AAC1F,aAAS,SAAS,OAAO;AAAE,UAAI;AAAE,aAAK,UAAU,OAAO,EAAE,KAAK,CAAC;AAAA,MAAG,SAAS,GAAG;AAAE,eAAO,CAAC;AAAA,MAAG;AAAA,IAAE;AAC7F,aAAS,KAAK,QAAQ;AAAE,aAAO,OAAO,QAAQ,OAAO,KAAK,IAAI,MAAM,OAAO,KAAK,EAAE,KAAK,WAAW,QAAQ;AAAA,IAAG;AAC7G,UAAM,YAAY,UAAU,MAAM,SAAS,cAAc,CAAC,CAAC,GAAG,KAAK,CAAC;AAAA,EACxE,CAAC;AACL;AASO,SAAS,OAAO,UAAU,iBAAiB;AAC9C,SAAO,UAAU,MAAM,QAAQ,QAAQ,aAAa;AAChD,UAAM,aAAa,SAAS;AAC5B,QAAI,CAAC;AACD,YAAM,IAAI,QAAQ,GAAG,uCAAuC;AAChE,QAAI,CAAC,SAAS;AACV,YAAM,IAAI,QAAQ,GAAG,0CAA0C;AACnE,UAAM,UAAU,CAAC,UAAU;AAC3B,QAAI;AACA,cAAQ,KAAK,eAAe;AAChC,UAAM,WAAW,MAAM,SAAS,MAAM,IAAI,IAAI,2CAA2C,QAAQ,GAAG;AAAA,MAChG,QAAQ;AAAA,MACR,SAAS;AAAA,QACL,gBAAgB;AAAA,QAChB,cAAc;AAAA,QACd,kBAAkB;AAAA,QAClB,gBAAgB;AAAA,MACpB;AAAA,MACA,MAAM,KAAK,UAAU,OAAO;AAAA,IAChC,CAAC;AACD,QAAI,CAAC,SAAS;AACV,YAAM,IAAI,QAAQ,GAAG,2CAA2C,SAAS,MAAM,EAAE;AACrF,UAAM,UAAU,MAAM,SAAS,KAAK;AACpC,WAAO,mBAAmB,OAAO;AAAA,EACrC,CAAC;AACL;AAIO,SAAS,mBAAmB,SAAS;AACxC,MAAI,gBAAgB,CAAC;AACrB,MAAI,QAAQ,SAAS,KAAK,OAAO,QAAQ,CAAC,MAAM,UAAU;AACtD,UAAM,cAAc,WAAW,QAAQ,CAAC,CAAC;AACzC,oBAAgB,KAAK,MAAM,eAAe,IAAI;AAAA,EAClD,WACS,QAAQ,UAAU,OAAO,QAAQ,CAAC,MAAM,UAAU;AACvD,oBAAgB,QAAQ,CAAC;AAAA,EAC7B;AACA,QAAM,CAAC,WAAW,eAAe,EAAE,iBAAiB,SAAS,YAAY,EAAE,0BAA0B,IAAI;AACzG,QAAM,iDAAiD,MAAM,QAAQ,aAAa,IAAI,cAAc,KAAK,CAAC,UAAU,SAAS,OAAO,UAAU,QAAQ,IAAI;AAC1J,SAAO;AAAA,IACH;AAAA,IACA,uBAAuB;AAAA,MACnB;AAAA,IACJ;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACJ;AACJ;AAIO,SAAS,WAAW,oBAAoB;AAC3C,QAAM,SAAS,WAAW,kBAAkB;AAC5C,MAAI,OAAO;AACP,WAAO,IAAI,YAAY,EAAE,OAAO,OAAO,IAAI,CAAC,MAAM,IAAI,EAAE,CAAC;AACjE;;;AG3EA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAIA,aAAwC,SAAU,SAAS,YAAY,GAAG,WAAW;AACrF,WAAS,MAAM,OAAO;AAAE,WAAO,iBAAiB,IAAI,QAAQ,IAAI,EAAE,SAAU,SAAS;AAAE,cAAQ,KAAK;AAAA,IAAG,CAAC;AAAA,EAAG;AAC3G,SAAO,KAAK,MAAM,IAAI,UAAU,SAAU,SAAS,QAAQ;AACvD,aAAS,UAAU,OAAO;AAAE,UAAI;AAAE,aAAK,UAAU,KAAK,KAAK,CAAC;AAAA,MAAG,SAAS,GAAG;AAAE,eAAO,CAAC;AAAA,MAAG;AAAA,IAAE;AAC1F,aAAS,SAAS,OAAO;AAAE,UAAI;AAAE,aAAK,UAAU,OAAO,EAAE,KAAK,CAAC;AAAA,MAAG,SAAS,GAAG;AAAE,eAAO,CAAC;AAAA,MAAG;AAAA,IAAE;AAC7F,aAAS,KAAK,QAAQ;AAAE,aAAO,OAAO,QAAQ,OAAO,KAAK,IAAI,MAAM,OAAO,KAAK,EAAE,KAAK,WAAW,QAAQ;AAAA,IAAG;AAC7G,UAAM,YAAY,UAAU,MAAM,SAAS,cAAc,CAAC,CAAC,GAAG,KAAK,CAAC;AAAA,EACxE,CAAC;AACL;AAOO,SAAS,SAAS,MAAM;AAC3B,SAAOA,WAAU,MAAM,QAAQ,QAAQ,aAAa;AAChD,QAAI,IAAI;AACR,UAAM,EAAE,SAAS,UAAU,WAAW,IAAI;AAC1C,UAAM,EAAE,WAAW,IAAI;AACvB,UAAM,WAAW,MAAM,eAAe,SAAS,YAAY,QAAQ;AACnE,QAAI,SAAS,qBAAqB,QAAQ;AACtC,YAAM,wBAAwB,SAAS,qBAAqB,CAAC;AAC7D,UAAI,CAAC;AACD,cAAM,IAAI,QAAQ,GAAG,eAAe;AACxC,YAAM,YAAY,MAAM,sBAAsB,YAAY,MAAM,KAAK,SAAS,mBAAmB,oBAAoB,QAAQ,OAAO,SAAS,KAAK,SAAS,mBAAmB,0BAA0B,QAAQ,OAAO,SAAS,KAAK,EAAE,CAAC;AACxO,UAAI,OAAO,cAAc;AACrB,cAAM,IAAI,QAAQ,IAAI,YAAY;AACtC,YAAM,SAAS,MAAM,UAAU,IAAI,YAAY,EAAE,OAAO,UAAU,CAAC;AACnE,UAAI,CAAC;AACD,cAAM,IAAI,QAAQ,IAAI,eAAe;AACzC,UAAI,EAAE,kBAAkB;AACpB,cAAM,IAAI,QAAQ,IAAI,aAAa;AACvC,aAAO;AAAA,QACH,SAAS,WAAW,QAAQ,IAAI;AAAA,QAChC,oBAAoB,SAAS;AAAA,MACjC;AAAA,IACJ;AACA,UAAM,IAAI,QAAQ,GAAG,8CAA8C;AAAA,EACvE,CAAC;AACL;AAOA,SAAS,eAAe,SAAS,YAAY,UAAU;AACnD,SAAOA,WAAU,MAAM,QAAQ,QAAQ,aAAa;AAChD,UAAM,KAAK,SAAS,UAAU,UAAU;AACxC,UAAM,aAAa,SAAS;AAC5B,QAAI,CAAC;AACD,YAAM,IAAI,QAAQ,GAAG,yCAAyC;AAClE,QAAI,CAAC;AACD,YAAM,IAAI,QAAQ,GAAG,gCAAgC;AACzD,QAAI,CAAC,SAAS;AACV,YAAM,IAAI,QAAQ,GAAG,mCAAmC;AAC5D,UAAM,eAAe,CAAC;AACtB,UAAM,kBAAkB,CAAC,KAAK,KAAK,KAAK,QAAQ;AAC5C,aAAO,OAAO,cAAc,EAAE,KAAK,KAAK,KAAK,IAAI,CAAC;AAAA,IACtD;AACA,QAAI,CAAC,GAAG;AACJ,YAAM,IAAI,QAAQ,GAAG,mBAAmB;AAC5C,QAAI;AACA,YAAM,GAAG,EAAE,SAAS,iBAAiB,MAAM,QAAW,MAAM;AAAA,MAAE,CAAC;AAAA,IACnE,SACO,KAAK;AACR,YAAM,IAAI,QAAQ,GAAG,iCAAiC,IAAI,OAAO,EAAE;AAAA,IACvE;AACA,QAAI,CAAC,aAAa;AACd,YAAM,IAAI,QAAQ,GAAG,iDAAiD;AAC1E,QAAI;AACJ,UAAM,uBAAuB,CAAC;AAC9B,UAAM,aAAa,IAAI,CAAC,aAAc,mBAAmB,UAAW,CAAC,EAAE,EAAE,oBAAoB,CAAC;AAC9F,QAAI,CAAC;AACD,YAAM,IAAI,QAAQ,GAAG,mBAAmB;AAC5C,QAAI,CAAC,qBAAqB;AACtB,YAAM,IAAI,QAAQ,GAAG,kDAAkD;AAC3E,UAAM,UAAU,CAAC,YAAY,gBAAgB;AAC7C,UAAM,yBAAyB,MAAM,SAAS,MAAM,IAAI,IAAI,+CAA+C,QAAQ,GAAG;AAAA,MAClH,QAAQ;AAAA,MACR,SAAS;AAAA,QACL,gBAAgB;AAAA,QAChB,kBAAkB;AAAA,QAClB,gBAAgB;AAAA,QAChB,cAAc;AAAA,QACd,UAAU;AAAA,MACd;AAAA,MACA,MAAM,KAAK,UAAU,OAAO;AAAA,IAChC,CAAC;AACD,QAAI,CAAC,uBAAuB;AACxB,YAAM,IAAI,QAAQ,GAAG,kDAAkD;AAC3E,UAAM,qBAAqB,MAAM,uBAAuB,KAAK;AAC7D,QAAI,CAAC,mBAAmB;AACpB,YAAM,IAAI,QAAQ,GAAG,gDAAgD;AACzE,UAAM,CAAC,gBAAgB,kBAAkB,sBAAsB,oBAAoB,IAAI;AACvF,QAAI,mBAAmB,UAAa,OAAO,mBAAmB;AAC1D,YAAM,IAAI,QAAQ,GAAG,uCAAuC;AAChE,QAAI,qBAAqB,UAAa,OAAO,qBAAqB;AAC9D,YAAM,IAAI,QAAQ,IAAI,2BAA2B;AACrD,QAAI,yBAAyB,UAAa,OAAO,yBAAyB;AACtE,YAAM,IAAI,QAAQ,IAAI,8CAA8C;AACxE,QAAI,yBAAyB,UAAa,OAAO,yBAAyB;AACtE,YAAM,IAAI,QAAQ,IAAI,8CAA8C;AACxE,WAAO;AAAA,MACH,oBAAoB;AAAA,QAChB;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACJ;AAAA,MACA;AAAA,IACJ;AAAA,EACJ,CAAC;AACL;AAKO,SAAS,oBAAoB,YAAY,aAAa;AACzD,QAAM,oBAAoB,IAAI,YAAY,EAAE,OAAO,UAAU;AAC7D,MAAI,kBAAkB,SAAS;AAC3B,UAAM,IAAI,QAAQ,IAAI,aAAa;AACvC,QAAM,YAAY,KAAK,MAAM,KAAK,IAAI,IAAI,GAAI;AAC9C,QAAM,aAAa,CAAC,KAAK,MAAM,KAAK,OAAO,IAAI,GAAG,GAAG,KAAK,MAAM,KAAK,OAAO,IAAI,GAAG,CAAC;AAGpF,QAAM,SAAS,WAAW,OAAO;AAAA,IAC7B;AAAA,IAAI,gBAAgB,QAAQ,gBAAgB,SAAS,cAAc;AAAA,EACvE,GAAG;AAAA,IACE,aAAa,KAAM;AAAA,IACnB,aAAa,KAAM;AAAA,IACnB,aAAa,IAAK;AAAA,IACnB,YAAY;AAAA,EAChB,CAAC;AACD,QAAM,SAAS,IAAI,WAAW,IAAI,OAAO,SAAS,kBAAkB,MAAM;AAC1E,SAAO,CAAC,IAAI;AACZ,SAAO,CAAC,IAAI,OAAO,SAAS,kBAAkB;AAC9C,SAAO,IAAI,QAAQ,CAAC;AACpB,SAAO,IAAI,mBAAmB,IAAI,OAAO,MAAM;AAC/C,QAAM,UAAU,OAAO,SAAS,CAAC;AACjC,QAAM,YAAY,WAAW;AAC7B,WAAS,IAAI,WAAW,IAAI,QAAQ,QAAQ,KAAK;AAC7C,YAAQ,CAAC,KAAK,QAAQ,IAAI,SAAS;AAAA,EACvC;AACA,SAAO,WAAW,QAAQ,IAAI;AAClC;AAMO,SAAS,kBAAkB,aAAa;AAC3C,QAAM,SAAS,WAAW,WAAW;AACrC,QAAM,gBAAgB,OAAO,CAAC;AAC9B,QAAM,oBAAoB,IAAI;AAC9B,MAAI,OAAO,WAAW;AAClB,UAAM,IAAI,MAAM,wBAAwB;AAC5C,QAAM,UAAU,OAAO,SAAS,CAAC;AAEjC,QAAM,YAAY;AAClB,WAAS,IAAI,WAAW,IAAI,QAAQ,QAAQ,EAAE,GAAG;AAC7C,YAAQ,CAAC,KAAK,QAAQ,IAAI,SAAS;AAAA,EACvC;AACA,QAAM,OAAO,CAAC,QAAQ,CAAC,GAAG,QAAQ,CAAC,CAAC;AACpC,QAAM,aAAa,QAAQ,CAAC;AAC5B,QAAM,cAAc,QAAQ,CAAC;AAC7B,QAAM,YAAa,QAAQ,CAAC,KAAK,KAC5B,QAAQ,CAAC,KAAK,KACd,QAAQ,CAAC,KAAK,IACf,QAAQ,CAAC;AACb,QAAM,OAAO,IAAI,KAAK,YAAY,GAAI;AACtC,QAAM,aAAa,IAAI,YAAY,EAAE,OAAO,QAAQ,SAAS,CAAC,CAAC;AAC/D,SAAO;AAAA,IACH;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACJ;AACJ;;;ALnLA,IAAO,eAAQ;",
  "names": ["__awaiter"]
}
